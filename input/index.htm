<html><style>body {
color: #000000;
background-color: #FFFFFF;
font-size: 24;
font-family: Serif;
font-weight: bold;
font-style: italic;
}
h1, h2, h3, h4, h5, h6 {
color: #000000;
background-color: #FFFFFF;
font-size: 24;
font-family: Serif;
font-weight: bold;
font-style: italic;
}
table, pre {
color: #000000;
background-color: #FFFFFF;
font-size: 16;
font-family: Serif;
font-weight: normal;
font-style: normal;
}

ul, #myUL {
  list-style-type: none;
}

#myUL {
  margin: 0;
  padding: 0;
}

.caret, .dropDownCaret {
  cursor: pointer;
}

.caret::before {
	content: "\25B6";
	color: black;
	display: inline - block;
	margin-right: 6px;
}

.dropDownCaret::before {
	content: "\25BC";
	color: black;
	display: inline - block;
	margin-right: 6px;
	float: right;
}


.nested {
  display: none;
}

.active {
  display: block;
}
</style><body><br></br><h1>Power BI Documentation</h1><br></br><hr></hr><h2>Generated by <a href="http://radacad.com/power-bi-helper">Power BI Helper</a> (Copyright &copy; <a href="http://radacad.com">RADACAD</a>).<br></br>Date: 26/06/2024 16:53:44<br></br></h2><h1>------------------******   Model    ******---------------------</h1><br></br><h2>Model: Salarios Dev</h2><br></br><hr></hr><br></br><h3>List of Tables:</h3><br></br><table border='1px' cellpadding='1' cellspacing='1'><tr ><td >Name</td><td >Description</td><td >Storage Mode</td><td >Source</td><td >Is Hidden</td></tr><tr ><td >Dataset salary 2024</td><td ></td><td >Import</td><td ><pre>let
  Origem = Csv.Document(Web.Contents("https://nasnuvensrnp-my.sharepoint.com/personal/guilherme_martins_terceiro_rnp_br/Documents/Aplicativos/Microsoft Power Query/Uploaded Files/Dataset salary 2024.csv"), [Delimiter = ",", Columns = 11, QuoteStyle = QuoteStyle.None]),
  #"Cabeçalhos promovidos" = Table.PromoteHeaders(Origem, [PromoteAllScalars = true]),
  #"Tipo de coluna alterado" = Table.TransformColumnTypes(#"Cabeçalhos promovidos", {{"work_year", Int64.Type}, {"experience_level", type text}, {"employment_type", type text}, {"job_title", type text}, {"salary", Int64.Type}, {"salary_currency", type text}, {"salary_in_usd", Int64.Type}, {"employee_residence", type text}, {"remote_ratio", Int64.Type}, {"company_location", type text}, {"company_size", type text}}),
    #"Colunas Renomeadas" = Table.RenameColumns(#"Tipo de coluna alterado",{{"experience_level", "nível de experiência"}, {"job_title", "posição"}, {"employee_residence", "Localidade dos empregados"}, {"company_location", "Localização de empresa"}})
in
  #"Colunas Renomeadas"</pre></td><td >False</td></tr><tr ><td >DateTableTemplate_193c27cd-b61f-45fe-8158-ac532f346cb3</td><td ></td><td >Import</td><td ><pre>Calendar(Date(2015,1,1), Date(2015,1,1))</pre></td><td >True</td></tr></table><hr></hr><br></br><h3>List of Measures:</h3><br></br><table>
	<tr>
		<th>Measure Name</th>
		<th>Table Name</th>
		<th>Description</th>
		<th>Expression</th>
		<th>Dependency</th>
		<th>Reverse Dependency</th>
	</tr>
	<tr>
		<td>M&#233;dia salarial em USD</td>
		<td>Dataset salary 2024</td>
		<td></td>
		<td><pre>AVERAGE ( [salary_in_usd] )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Média salarial em USD</span><span class="dropDownCaret">
<ul class="nested">
<li>Column: salary_in_usd (Table: Dataset salary 2024)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Média salarial em USD</td>
	</tr>
	<tr>
		<td>Sal&#225;rio minimo em USD</td>
		<td>Dataset salary 2024</td>
		<td></td>
		<td><pre>MIN ( 'Dataset salary 2024'[salary_in_usd] )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Salário minimo em USD</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Dataset salary 2024</li>
<li>Column: salary_in_usd (Table: Dataset salary 2024)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Salário minimo em USD</td>
	</tr>
	<tr>
		<td>Sal&#225;rio mais alto em USD</td>
		<td>Dataset salary 2024</td>
		<td></td>
		<td><pre>MAX ( 'Dataset salary 2024'[salary_in_usd] )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Salário mais alto em USD</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Dataset salary 2024</li>
<li>Column: salary_in_usd (Table: Dataset salary 2024)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Salário mais alto em USD</td>
	</tr>
	<tr>
		<td>Sal&#225;rio m&#233;dio</td>
		<td>Dataset salary 2024</td>
		<td></td>
		<td><pre>AVERAGE ( 'Dataset salary 2024'[salary_in_usd] )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Salário médio</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Dataset salary 2024</li>
<li>Column: salary_in_usd (Table: Dataset salary 2024)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Salário médio</td>
	</tr>
	<tr>
		<td>Sal&#225;rio m&#233;dio por t&#237;tulo de trabalho</td>
		<td>Dataset salary 2024</td>
		<td></td>
		<td><pre>AVERAGE ( 'Dataset salary 2024'[salary_in_usd] )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Salário médio por título de trabalho</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Dataset salary 2024</li>
<li>Column: salary_in_usd (Table: Dataset salary 2024)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Salário médio por título de trabalho</td>
	</tr>
</table>
<hr></hr><br></br><h3>List of Columns for Table Dataset salary 2024:</h3><br></br><table>
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>work_year</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>n&#237;vel de experi&#234;ncia</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>employment_type</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>posi&#231;&#227;o</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>salary</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>salary_currency</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>salary_in_usd</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Localidade dos empregados</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>remote_ratio</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Localiza&#231;&#227;o de empresa</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>company_size</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3>List of Roles:</h3><br></br><table>
	<tr>
		<th>Role Name</th>
		<th>Table Name</th>
		<th>Description</th>
		<th>Expression</th>
	</tr>
</table>
<hr></hr><br></br><h2>M (Power Query) Script:</h2><br></br><br></br><font face="verdana" size="2"Dataset salary 2024<br></br><br></br><font color="blue">let</font><br></br>  Origem = <font color="purple">Csv.Document</font>(<font color="purple">Web.Contents</font>("https:<font color="green">//nasnuvensrnp-my.sharepoint.com/personal/guilherme_martins_terceiro_rnp_br/Documents/Aplicativos/Microsoft Power Query/Uploaded Files/Dataset salary 2024.csv"), [Delimiter = <font color="red">","</font>, Columns = 11, QuoteStyle = <font color="purple">QuoteStyle.None</font>]),
</font>
  #<font color="red">"Cabeçalhos promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(Origem, [PromoteAllScalars = <font color="blue">true</font>]),<br></br>  #<font color="red">"Tipo de coluna alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos promovidos"</font>, {{<font color="red">"work_year"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"experience_level"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"employment_type"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"job_title"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"salary"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"salary_currency"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"salary_in_usd"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"employee_residence"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"remote_ratio"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"company_location"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"company_size"</font>, <font color="blue">type</font> <font color="blue">text</font>}}),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo de coluna alterado"</font>,{{<font color="red">"experience_level"</font>, <font color="red">"nível de experiência"</font>}, {<font color="red">"job_title"</font>, <font color="red">"posição"</font>}, {<font color="red">"employee_residence"</font>, <font color="red">"Localidade dos empregados"</font>}, {<font color="red">"company_location"</font>, <font color="red">"Localização de empresa"</font>}})<br></br><font color="blue">in</font><br></br>  #<font color="red">"Colunas Renomeadas"</font><br></br><br></br><br></br>----------------------<br></br>DateTableTemplate_193c27cd-b61f-45fe-8158-ac532f346cb3<br></br><br></br>Calendar(Date(2015,1,1), Date(2015,1,1))<br></br><br></br><br></br>----------------------<br></br></font><br></br><hr></hr><br></br><h3>Partitions:</h3><br></br><table border='1px' cellpadding='1' cellspacing='1'><tr ><td >Name</td><td >QueryDefinition</td></tr><tr ><td >Dataset salary 2024</td><td ><font color="blue">let</font><br></br>  Origem = <font color="purple">Csv.Document</font>(<font color="purple">Web.Contents</font>("https:<font color="green">//nasnuvensrnp-my.sharepoint.com/personal/guilherme_martins_terceiro_rnp_br/Documents/Aplicativos/Microsoft Power Query/Uploaded Files/Dataset salary 2024.csv"), [Delimiter = <font color="red">","</font>, Columns = 11, QuoteStyle = <font color="purple">QuoteStyle.None</font>]),</font><br></br>  #<font color="red">"Cabeçalhos promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(Origem, [PromoteAllScalars = <font color="blue">true</font>]),<br></br>  #<font color="red">"Tipo de coluna alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos promovidos"</font>, {{<font color="red">"work_year"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"experience_level"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"employment_type"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"job_title"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"salary"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"salary_currency"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"salary_in_usd"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"employee_residence"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"remote_ratio"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"company_location"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"company_size"</font>, <font color="blue">type</font> <font color="blue">text</font>}}),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo de coluna alterado"</font>,{{<font color="red">"experience_level"</font>, <font color="red">"nível de experiência"</font>}, {<font color="red">"job_title"</font>, <font color="red">"posição"</font>}, {<font color="red">"employee_residence"</font>, <font color="red">"Localidade dos empregados"</font>}, {<font color="red">"company_location"</font>, <font color="red">"Localização de empresa"</font>}})<br></br><font color="blue">in</font><br></br>  #<font color="red">"Colunas Renomeadas"</font></td></tr><tr ><td >DateTableTemplate_193c27cd-b61f-45fe-8158-ac532f346cb3</td><td >Calendar(Date(2015,1,1), Date(2015,1,1))</td></tr></table><script>
	var toggler = document.getElementsByClassName("caret");
	for (var i = 0; i < toggler.length; i++){
		toggler[i].addEventListener("click", function() {
			this.parentElement.querySelector(".nested").classList.toggle("active");
		});
	}
		
	var togglerAll = document.getElementsByClassName("dropDownCaret");
	for (var j=0; j<togglerAll.length; j++){
		togglerAll[j].addEventListener("click", function(event){
			if (event.currentTarget != event.target) return;
			if(this.parentElement.querySelector(".nested").classList.contains("active")){
				this.querySelectorAll(".nested").forEach(function(currentValue, currentIndex, listObj) {
					if(currentValue.classList.contains("active")){
						currentValue.classList.remove("active");
					}
				});
			}
			else{
				this.querySelectorAll(".nested").forEach(function(currentValue, currentIndex, listObj) {
					if(!currentValue.classList.contains("active")){
						currentValue.classList.add("active");
					}
				});
			}
		});
	}
</script></body></html>